#https://www.educative.io/edpresso/merge-sort-in-python
def mergeSort(myList):
    if len(myList) > 1:
        mid = len(myList) // 2
        left = myList[:mid]
        right = myList[mid:]

        # Recursive call on each half
        mergeSort(left)
        mergeSort(right)

        # Two iterators for traversing the two halves
        i = 0
        j = 0

        # Iterator for the main list
        k = 0

        while i < len(left) and j < len(right):
            if left[i] <= right[j]:
                # The value from the left half has been used
                myList[k] = left[i]
                # Move the iterator forward
                i += 1
            else:
                myList[k] = right[j]
                j += 1
            # Move to the next slot
            k += 1

        # For all the remaining values
        while i < len(left):
            myList[k] = left[i]
            i += 1
            k += 1

        while j < len(right):
            myList[k] = right[j]
            j += 1
            k += 1

#https://www.programiz.com/dsa/insertion-sort
# Insertion sort in Python


def insertionSort(array):
    for step in range(1, len(array)):
        key = array[step]
        j = step - 1

        # Compare key with each element on the left of it until an element smaller than it is found
        # For descending order, change key<array[j] to key>array[j].
        while j >= 0 and key < array[j]:
            array[j + 1] = array[j]
            j = j - 1

        # Place key at after the element just smaller than it.
        array[j + 1] = key


small_list = [9, 5, 1, 4, 3]
large_list = [9308, 359, 6790, 4822, 6074, 8369, 1128, 9952, 490, 5948, 4666, 7758, 620, 5626, 7857, 4542, 6241, 7554, 8428, 3335, 3114, 2433, 6381, 8817, 4547, 2787, 133, 609, 556, 46, 3580, 9345, 1303, 429, 5688, 1651, 2726, 4554, 1562, 2650, 6338, 6526, 3739, 2165, 5360, 4832, 2854, 369, 1159, 5411, 6759, 9374, 6735, 3698, 9479, 2029, 9063, 2241, 234, 2007, 4095, 6705, 6139, 6243, 6754, 2099, 6531, 7358, 6419, 9588, 2410, 6295, 1817, 3105, 327, 588, 3974, 902, 5513, 6055, 8947, 10000, 976, 5745, 4612, 9662, 2451, 6595, 5823, 2942, 3941, 8052, 8296, 1751, 1189, 2490, 527, 4163, 718, 5595, 8151, 9423, 365, 8242, 7418, 8562, 5724, 2676, 2321, 2541, 2117, 7973, 7801, 7680, 4727, 4886, 906, 8704, 9316, 469, 9656, 9341, 6791, 7257, 2810, 636, 3952, 3370, 7618, 1489, 5775, 2881, 7235, 5880, 2641, 1499, 8246, 6193, 163, 2277, 5032, 2662, 6103, 8784, 6543, 3593, 4975, 3488, 9227, 4898, 8001, 1871, 424, 5977, 5768, 1507, 6896, 3768, 3623, 1664, 6360, 2557, 3852, 723, 8846, 2291, 7859, 1612, 8062, 9209, 1451, 6150, 1050, 9352, 9474, 6717, 9954, 4795, 4495, 9952, 1291, 8349, 1594, 7861, 405, 431, 8159, 3352, 6951, 998, 2077, 2620, 9356, 3505, 1782, 7370, 2127, 8154, 6506, 3057, 1223, 2269, 760, 5468, 2297, 3501, 55, 8138, 2058, 9932, 2192, 3463, 5441, 2723, 3149, 6575, 4620, 7241, 4062, 1053, 8743, 4763, 6044, 8723, 3826, 8045, 236, 2313, 9252, 8500, 8959, 8547, 8391, 2980, 1957, 9366, 8782, 1197, 1034, 9011, 6622, 7687, 7788, 8204, 2927, 5424, 7593, 7540, 3028, 702, 4793, 5339, 2161, 8847, 4511, 3830, 3357, 7218, 8111, 5439, 5033, 8587, 3158, 6961, 9698, 327, 7156, 8627, 669, 9213, 2137, 1334, 5358, 8797, 6520, 6261, 7119, 1588, 3844, 5668, 8443, 2250, 3058, 7270, 2730, 1315, 1798, 7594, 968, 4220, 8515, 6084, 2546, 7134, 9719, 5603, 7226, 143, 7277, 7614, 6597, 206, 8993, 3236, 2008, 2667, 6886, 485, 6956, 1863, 4577, 3201, 6104, 9135, 5163, 2262, 2124, 8496, 3381, 4520, 5484, 1460, 4158, 2078, 2795, 3734, 7100, 1099, 8162, 5717, 6446, 3080, 4997, 2046, 6677, 2854, 6497, 6952, 1515, 3763, 3294, 3307, 4566, 7057, 2017, 8541, 3990, 4897, 7479, 1307, 6657, 5843, 7811, 9583, 6898, 7382, 9301, 887, 2427, 6361, 7705, 6346, 1235, 5288, 1778, 3217, 7361, 9569, 4459, 1251, 2180, 5051, 3636, 6425, 732, 2456, 7600, 7518, 8463, 3987, 7201, 3071, 9482, 6733, 5445, 6419, 2593, 8248, 9430, 9138, 7028, 6185, 693, 856, 7405, 2881, 5358, 1630, 641, 1221, 3941, 4105, 8582, 8532, 7637, 9584, 2899, 5098, 1466, 8152, 5832, 495, 4469, 8742, 1444, 367, 7395, 2531, 5732, 4703, 8579, 3341, 6924, 6907, 8540, 416, 8379, 6776, 9351, 3481, 1924, 8163, 5090, 5776, 7399, 1320, 3357, 4981, 6602, 8799, 8236, 6139, 3276, 9058, 6955, 3580, 4301, 5091, 2668, 905, 8605, 5897, 1478, 5511, 5463, 1655, 4807, 1111, 4923, 6207, 3688, 7152, 71, 3755, 5866, 7287, 1034, 2055, 474, 3476, 8137, 8318, 8168, 6016, 5236, 7752, 6195, 713, 6137, 7544, 9794, 2348, 4755, 6085, 2891, 398, 6759, 8188, 3613, 9322, 7609, 9211, 7858, 4933, 1605, 8223, 7088, 3872, 7763, 4643, 1267, 5155, 9018, 6234, 3408, 6908, 1398, 549, 8112, 5447, 2687, 1642, 4260, 6653, 3913, 7063, 5611, 3573, 8808, 9164, 4047, 9614, 2916, 8398, 5728, 1729, 6998, 6087, 842, 1756, 9417, 258, 7994, 9945, 8034, 8144, 8437, 3607, 8821, 2266, 3040, 1878, 8825, 4871, 7104, 7129, 5654, 2248, 5150, 6188, 5198, 5442, 8712, 5011, 4923, 5371, 532, 6642, 312, 8461, 2285, 4075, 2284, 5817, 8668, 603, 5401, 403, 118, 9647, 4145, 469, 3179, 8497, 4408, 8615, 3242, 3272, 6475, 2590, 5918, 3194, 1271, 9732, 1628, 1317, 9669, 169, 4886, 1243, 80, 5100, 439, 8488, 1859, 6098, 8209, 4211, 6331, 8268, 4801, 7629, 7553, 6700, 9228, 8247, 4552, 3805, 5303, 4250, 320, 3232, 5064, 4478, 4329, 6807, 3033, 772, 9336, 3363, 8039, 3650, 6874, 3653, 3064, 5814, 9090, 8889, 4350, 3513, 7669, 9001, 4089, 8162, 5449, 2600, 7202, 3525, 7531, 9380, 8015, 5371, 1175, 5480, 9581, 5027, 9595, 2140, 1004, 188, 4861, 2438, 8877, 8545, 2121, 6636, 6088, 4260, 9723, 2036, 9474, 8362, 7681, 4032, 4751, 5575, 5173, 257, 3584, 5319, 7746, 9186, 4802, 7238, 3277, 3409, 8448, 5667, 6942, 6293, 9639, 7904, 3525, 1252, 7604, 9570, 1731, 9311, 865, 677, 4987, 8692, 256, 9425, 5623, 4700, 3049, 7154, 7000, 517, 6448, 4282, 9947, 3825, 4643, 2332, 4867, 643, 2877, 7152, 7141, 4448, 6731, 3947, 9853, 5450, 2597, 2250, 1684, 5537, 4035, 6773, 6564, 7210, 1303, 484, 2655, 4010, 3541, 2339, 9150, 4196, 8011, 8665, 3740, 6225, 3723, 4497, 1230, 210, 7574, 1995, 4609, 8822, 2825, 847, 7329, 6966, 3712, 7049, 5550, 2910, 7262, 3487, 9364, 8549, 4472, 7104, 7925, 6733, 9541, 365, 477, 5224, 158, 3343, 4862, 2663, 8190, 2196, 7663, 4036, 7782, 4372, 8712, 8508, 5410, 4993, 6250, 5069, 2328, 8199, 391, 4041, 9184, 3800, 220, 2925, 7552, 9608, 5560, 480, 95, 3821, 5569, 636, 5922, 3437, 7198, 1015, 7574, 9364, 3023, 7653, 9350, 2460, 1953, 5910, 4535, 2161, 3250, 8247, 3984, 5327, 9501, 4871, 7911, 3138, 6662, 7649, 746, 17, 1512, 8128, 5717, 9160, 1134, 552, 5484, 5801, 9949, 224, 7828, 259, 8771, 9666, 6687, 4331, 5157, 8641, 7942, 1976, 4441, 2857, 307, 7999, 9707, 1816, 2743, 5254, 9, 9203, 5319, 7411, 9603, 9517, 6017, 7390, 3902, 5094, 2444, 9532, 4137, 6166, 216, 463, 8873, 8491, 9469, 3969, 4247, 429, 6296, 1263, 2543, 9419, 7655, 5086, 9235, 8788, 1114, 4322, 1564, 8435, 178, 411, 1233, 6524, 5285, 1884, 6796, 7327, 3957, 6236, 4812, 3389, 4042, 2794, 9172, 4766, 7451, 3131, 3614, 3492, 3299, 1319, 439, 5889, 8769, 1185, 4638, 7124, 598, 9464, 783, 7107, 4859, 1704, 6316, 655, 7866, 9574, 4597, 4346, 1043, 8155, 2678, 5987, 5831, 8473, 5802, 3763, 1452, 7810, 4472, 7773, 4778, 8814, 670, 2275, 1271, 3780, 668, 9227, 8607, 9921, 9954, 7860, 6228, 526, 2605, 1270, 6321, 3353, 4584, 8337, 7742, 6845, 3979, 5906, 7329, 3532, 7355, 4634, 2174, 8465, 4884, 4769, 5132, 8053, 1935, 5834, 3973, 6980, 5494, 7136, 434, 8798, 3102, 1581, 7155, 2528, 1203, 1631, 3370, 6354, 9937, 8171, 9554, 4048, 3084, 8367, 5944, 4141, 840, 2090, 4659, 1120, 727, 9094]
def run_insertion_small():
    for i in range(1000):
        insertionSort(small_list)

def run_insertion_large():
    for i in range(1000):
        insertionSort(large_list)

def run_merge_small():
    # https://www.omnicalculator.com/statistics/random-number
    for i in range(1000):
        mergeSort(small_list)
def run_merge_large():
    for i in range(1000):
        mergeSort(large_list)

run_insertion_small()
run_insertion_large()
run_merge_small()
run_merge_large()